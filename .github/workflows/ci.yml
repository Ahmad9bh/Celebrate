name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  migrations:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Show repo root contents (debug)
        run: |
          pwd
          ls -la
          echo "--- backend/ ---"
          ls -la backend
          echo "--- backend/prisma/ ---"
          ls -la backend/prisma || true

      - name: Install backend dependencies (workspace)
        run: npm ci --workspace backend --include-workspace-root

      - name: Check DATABASE_URL provided
        run: |
          if [ -z "${{ secrets.PG_TEST_DATABASE_URL }}" ]; then
            echo "PG_TEST_DATABASE_URL is not set in repo secrets."
            exit 1
          fi

      - name: Run Prisma migrations (deploy)
        working-directory: backend
        env:
          DATABASE_URL: ${{ secrets.PG_TEST_DATABASE_URL }}
        run: |
          pwd
          test -f prisma/schema.prisma && echo "Found prisma/schema.prisma" || (echo "schema.prisma not found" && ls -la && ls -la prisma && exit 1)
          # Reset the test database to ensure an empty schema in CI (safe for ephemeral test DBs)
          npx -y prisma@5.22.0 migrate reset --force --skip-seed --schema prisma/schema.prisma
          # Deploy migrations on a clean database
          npx -y prisma@5.22.0 migrate deploy --schema prisma/schema.prisma

  backend-tests:
    needs: [migrations]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (workspaces)
        run: npm ci

      - name: Run tests
        env:
          DATABASE_URL: ${{ secrets.PG_TEST_DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.PG_TEST_SHADOW_DATABASE_URL }}
        run: npm test

  e2e-frontend:
    needs: [migrations]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (workspaces)
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (starts servers automatically)
        env:
          DATABASE_URL: ${{ secrets.PG_TEST_DATABASE_URL }}
          SHADOW_DATABASE_URL: ${{ secrets.PG_TEST_SHADOW_DATABASE_URL }}
          JWT_SECRET: dev-secret
          USE_MOCK_STRIPE: "1"
          NEXT_PUBLIC_API_BASE: http://localhost:4000
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_dummy
        run: npm run test:e2e

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: ignore
          retention-days: 7
