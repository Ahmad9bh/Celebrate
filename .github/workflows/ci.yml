name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (workspaces)
        run: npm ci

      - name: Run tests
        env:
          # Ensure prisma uses a dedicated test DB file inside backend during tests
          DATABASE_URL: file:./dev-test.db
        run: npm test

  e2e-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies (workspaces)
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests (starts servers automatically)
        env:
          JWT_SECRET: dev-secret
          USE_MOCK_STRIPE: "1"
          NEXT_PUBLIC_API_BASE: http://localhost:4000
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: pk_test_dummy
          # Playwright config starts backend/frontend via webServer. No extra envs needed by default.
        run: npm run test:e2e

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: frontend/playwright-report
          if-no-files-found: ignore
          retention-days: 7
